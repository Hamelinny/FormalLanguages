<?xml version="1.0" encoding="UTF-8"?>
<project name="parser" default="all">
  
  
  <property file="LParser.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.ear"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/charsets.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/jfxrt.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/jce.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/jfxswt.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/jsse.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/resources.jar"/>
      <include name="../java-1.8.0-openjdk-amd64/jre/lib/rt.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.gradle:_com.ibm.icu:icu4j:58.2.classpath">
    <pathelement location="${basedir}/../../../../.gradle/caches/modules-2/files-2.1/com.ibm.icu/icu4j/58.2/db9fd4b4c189cf1518db14c67d14a2cfcfbe59f6/icu4j-58.2.jar"/>
  </path>
  
  <path id="library.gradle:_junit:junit:4.11.classpath">
    <pathelement location="${basedir}/../../../../.gradle/caches/modules-2/files-2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar"/>
  </path>
  
  <path id="library.gradle:_org.abego.treelayout:org.abego.treelayout.core:1.0.3.classpath">
    <pathelement location="${basedir}/../../../../.gradle/caches/modules-2/files-2.1/org.abego.treelayout/org.abego.treelayout.core/1.0.3/457216e8e6578099ae63667bb1e4439235892028/org.abego.treelayout.core-1.0.3.jar"/>
  </path>
  
  <path id="library.gradle:_org.antlr:antlr-runtime:3.5.2.classpath">
    <pathelement location="${basedir}/../../../../.gradle/caches/modules-2/files-2.1/org.antlr/antlr-runtime/3.5.2/cd9cd41361c155f3af0f653009dcecb08d8b4afd/antlr-runtime-3.5.2.jar"/>
  </path>
  
  <path id="library.gradle:_org.antlr:antlr4-runtime:4.7.classpath">
    <pathelement location="${basedir}/../../../../.gradle/caches/modules-2/files-2.1/org.antlr/antlr4-runtime/4.7/30b13b7efc55b7feea667691509cf59902375001/antlr4-runtime-4.7.jar"/>
  </path>
  
  <path id="library.gradle:_org.antlr:antlr4:4.7.classpath">
    <pathelement location="${basedir}/../../../../.gradle/caches/modules-2/files-2.1/org.antlr/antlr4/4.7/cd6df46532bccabd8127c18c9ca5ef481962e931/antlr4-4.7.jar"/>
  </path>
  
  <path id="library.gradle:_org.antlr:st4:4.0.8.classpath">
    <pathelement location="${basedir}/../../../../.gradle/caches/modules-2/files-2.1/org.antlr/ST4/4.0.8/a1c55e974f8a94d78e2348fa6ff63f4fa1fae64/ST4-4.0.8.jar"/>
  </path>
  
  <path id="library.gradle:_org.glassfish:javax.json:1.0.4.classpath">
    <pathelement location="${basedir}/../../../../.gradle/caches/modules-2/files-2.1/org.glassfish/javax.json/1.0.4/3178f73569fd7a1e5ffc464e680f7a8cc784b85a/javax.json-1.0.4.jar"/>
  </path>
  
  <path id="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath">
    <pathelement location="${basedir}/../../../../.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module parser -->
  
  <dirname property="module.parser.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.parser" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.parser" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.parser" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.parser" value="-encoding UTF-8 -source 8 -target 1.8 ${compiler.args}"/>
  
  <property name="parser.output.dir" value="${module.parser.basedir}/out/production/parser"/>
  <property name="parser.testoutput.dir" value="${module.parser.basedir}/out/test/parser"/>
  
  <path id="parser.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="parser.module.production.classpath">
    <path refid="${module.jdk.classpath.parser}"/>
  </path>
  
  <path id="parser.runtime.production.module.classpath">
    <pathelement location="${parser.output.dir}"/>
  </path>
  
  <path id="parser.module.classpath">
    <path refid="${module.jdk.classpath.parser}"/>
    <pathelement location="${parser.output.dir}"/>
  </path>
  
  <path id="parser.runtime.module.classpath">
    <pathelement location="${parser.testoutput.dir}"/>
    <pathelement location="${parser.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.parser">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.parser">
    <patternset refid="excluded.from.module.parser"/>
  </patternset>
  
  
  <target name="compile.module.parser" depends="compile.module.parser.production,compile.module.parser.tests" description="Compile module parser"/>
  
  <target name="compile.module.parser.production" depends="register.custom.compilers" description="Compile module parser; production classes"/>
  
  <target name="compile.module.parser.tests" depends="register.custom.compilers,compile.module.parser.production" description="compile module parser; test classes" unless="skip.tests"/>
  
  <target name="clean.module.parser" description="cleanup module">
    <delete dir="${parser.output.dir}"/>
    <delete dir="${parser.testoutput.dir}"/>
  </target>
  
  
  <!-- Module parser_main -->
  
  <dirname property="module.parser_main.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.parser_main" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.parser_main" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.parser_main" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.parser_main" value="-encoding UTF-8 -source 8 -target 1.8 ${compiler.args}"/>
  
  <property name="parser_main.output.dir" value="${module.parser_main.basedir}/build/classes/main"/>
  <property name="parser_main.testoutput.dir" value="${module.parser_main.basedir}/build/classes/main"/>
  
  <path id="parser_main.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="parser_main.module.production.classpath">
    <path refid="${module.jdk.classpath.parser_main}"/>
    <path refid="library.gradle:_org.antlr:antlr4:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr4-runtime:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr-runtime:3.5.2.classpath"/>
    <path refid="library.gradle:_org.antlr:st4:4.0.8.classpath"/>
    <path refid="library.gradle:_org.abego.treelayout:org.abego.treelayout.core:1.0.3.classpath"/>
    <path refid="library.gradle:_org.glassfish:javax.json:1.0.4.classpath"/>
    <path refid="library.gradle:_com.ibm.icu:icu4j:58.2.classpath"/>
  </path>
  
  <path id="parser_main.runtime.production.module.classpath">
    <pathelement location="${parser_main.output.dir}"/>
    <path refid="library.gradle:_org.antlr:antlr4:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr4-runtime:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr-runtime:3.5.2.classpath"/>
    <path refid="library.gradle:_org.antlr:st4:4.0.8.classpath"/>
    <path refid="library.gradle:_org.abego.treelayout:org.abego.treelayout.core:1.0.3.classpath"/>
    <path refid="library.gradle:_org.glassfish:javax.json:1.0.4.classpath"/>
    <path refid="library.gradle:_com.ibm.icu:icu4j:58.2.classpath"/>
  </path>
  
  <path id="parser_main.module.classpath">
    <path refid="${module.jdk.classpath.parser_main}"/>
    <pathelement location="${parser_main.output.dir}"/>
    <path refid="library.gradle:_org.antlr:antlr4:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr4-runtime:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr-runtime:3.5.2.classpath"/>
    <path refid="library.gradle:_org.antlr:st4:4.0.8.classpath"/>
    <path refid="library.gradle:_org.abego.treelayout:org.abego.treelayout.core:1.0.3.classpath"/>
    <path refid="library.gradle:_org.glassfish:javax.json:1.0.4.classpath"/>
    <path refid="library.gradle:_com.ibm.icu:icu4j:58.2.classpath"/>
  </path>
  
  <path id="parser_main.runtime.module.classpath">
    <pathelement location="${parser_main.output.dir}"/>
    <path refid="library.gradle:_org.antlr:antlr4:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr4-runtime:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr-runtime:3.5.2.classpath"/>
    <path refid="library.gradle:_org.antlr:st4:4.0.8.classpath"/>
    <path refid="library.gradle:_org.abego.treelayout:org.abego.treelayout.core:1.0.3.classpath"/>
    <path refid="library.gradle:_org.glassfish:javax.json:1.0.4.classpath"/>
    <path refid="library.gradle:_com.ibm.icu:icu4j:58.2.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.parser_main">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.parser_main">
    <patternset refid="excluded.from.module.parser_main"/>
  </patternset>
  
  <path id="parser_main.module.sourcepath">
    <dirset dir="${module.parser_main.basedir}/build/generated-src/antlr">
      <include name="main"/>
    </dirset>
    <dirset dir="${module.parser_main.basedir}/src/main">
      <include name="antlr"/>
      <include name="java"/>
      <include name="resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.parser_main" depends="compile.module.parser_main.production,compile.module.parser_main.tests" description="Compile module parser_main"/>
  
  <target name="compile.module.parser_main.production" depends="register.custom.compilers" description="Compile module parser_main; production classes">
    <mkdir dir="${parser_main.output.dir}"/>
    <javac2 destdir="${parser_main.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.parser_main}/javac">
      <compilerarg line="${compiler.args.parser_main}"/>
      <bootclasspath refid="parser_main.module.bootclasspath"/>
      <classpath refid="parser_main.module.production.classpath"/>
      <src refid="parser_main.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.parser_main"/>
    </javac2>
    
    <copy todir="${parser_main.output.dir}">
      <fileset dir="${module.parser_main.basedir}/build/generated-src/antlr/main">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.parser_main.basedir}/src/main/antlr">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.parser_main.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.parser_main.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.parser_main.tests" depends="register.custom.compilers,compile.module.parser_main.production" description="compile module parser_main; test classes" unless="skip.tests"/>
  
  <target name="clean.module.parser_main" description="cleanup module">
    <delete dir="${parser_main.output.dir}"/>
    <delete dir="${parser_main.testoutput.dir}"/>
  </target>
  
  
  <!-- Module parser_test -->
  
  <dirname property="module.parser_test.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.parser_test" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.parser_test" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.parser_test" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.parser_test" value="-encoding UTF-8 -source 8 -target 1.8 ${compiler.args}"/>
  
  <property name="parser_test.output.dir" value="undefined"/>
  <property name="parser_test.testoutput.dir" value="${module.parser_test.basedir}/build/classes/test"/>
  
  <path id="parser_test.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="parser_test.module.production.classpath">
    <path refid="${module.jdk.classpath.parser_test}"/>
    <pathelement location="${parser_main.output.dir}"/>
    <path refid="library.gradle:_org.antlr:antlr4:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr4-runtime:4.7.classpath"/>
    <path refid="library.gradle:_junit:junit:4.11.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr-runtime:3.5.2.classpath"/>
    <path refid="library.gradle:_org.antlr:st4:4.0.8.classpath"/>
    <path refid="library.gradle:_org.abego.treelayout:org.abego.treelayout.core:1.0.3.classpath"/>
    <path refid="library.gradle:_org.glassfish:javax.json:1.0.4.classpath"/>
    <path refid="library.gradle:_com.ibm.icu:icu4j:58.2.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  <path id="parser_test.runtime.production.module.classpath">
    <path refid="parser_main.runtime.production.module.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr4:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr4-runtime:4.7.classpath"/>
    <path refid="library.gradle:_junit:junit:4.11.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr-runtime:3.5.2.classpath"/>
    <path refid="library.gradle:_org.antlr:st4:4.0.8.classpath"/>
    <path refid="library.gradle:_org.abego.treelayout:org.abego.treelayout.core:1.0.3.classpath"/>
    <path refid="library.gradle:_org.glassfish:javax.json:1.0.4.classpath"/>
    <path refid="library.gradle:_com.ibm.icu:icu4j:58.2.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  <path id="parser_test.module.classpath">
    <path refid="${module.jdk.classpath.parser_test}"/>
    <pathelement location="${parser_main.output.dir}"/>
    <path refid="library.gradle:_org.antlr:antlr4:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr4-runtime:4.7.classpath"/>
    <path refid="library.gradle:_junit:junit:4.11.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr-runtime:3.5.2.classpath"/>
    <path refid="library.gradle:_org.antlr:st4:4.0.8.classpath"/>
    <path refid="library.gradle:_org.abego.treelayout:org.abego.treelayout.core:1.0.3.classpath"/>
    <path refid="library.gradle:_org.glassfish:javax.json:1.0.4.classpath"/>
    <path refid="library.gradle:_com.ibm.icu:icu4j:58.2.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  <path id="parser_test.runtime.module.classpath">
    <pathelement location="${parser_test.testoutput.dir}"/>
    <path refid="parser_main.runtime.module.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr4:4.7.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr4-runtime:4.7.classpath"/>
    <path refid="library.gradle:_junit:junit:4.11.classpath"/>
    <path refid="library.gradle:_org.antlr:antlr-runtime:3.5.2.classpath"/>
    <path refid="library.gradle:_org.antlr:st4:4.0.8.classpath"/>
    <path refid="library.gradle:_org.abego.treelayout:org.abego.treelayout.core:1.0.3.classpath"/>
    <path refid="library.gradle:_org.glassfish:javax.json:1.0.4.classpath"/>
    <path refid="library.gradle:_com.ibm.icu:icu4j:58.2.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.parser_test">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.parser_test">
    <patternset refid="excluded.from.module.parser_test"/>
  </patternset>
  
  <path id="parser_test.module.test.sourcepath">
    <dirset dir="${module.parser_test.basedir}/build/generated-src/antlr">
      <include name="test"/>
    </dirset>
    <dirset dir="${module.parser_test.basedir}/src/test">
      <include name="antlr"/>
      <include name="java"/>
      <include name="resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.parser_test" depends="compile.module.parser_test.production,compile.module.parser_test.tests" description="Compile module parser_test"/>
  
  <target name="compile.module.parser_test.production" depends="register.custom.compilers,compile.module.parser_main" description="Compile module parser_test; production classes"/>
  
  <target name="compile.module.parser_test.tests" depends="register.custom.compilers,compile.module.parser_test.production" description="compile module parser_test; test classes" unless="skip.tests">
    <mkdir dir="${parser_test.testoutput.dir}"/>
    <javac2 destdir="${parser_test.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.parser_test}/javac">
      <compilerarg line="${compiler.args.parser_test}"/>
      <bootclasspath refid="parser_test.module.bootclasspath"/>
      <classpath refid="parser_test.module.classpath"/>
      <src refid="parser_test.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.parser_test"/>
    </javac2>
    
    <copy todir="${parser_test.testoutput.dir}">
      <fileset dir="${module.parser_test.basedir}/build/generated-src/antlr/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.parser_test.basedir}/src/test/antlr">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.parser_test.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.parser_test.basedir}/src/test/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.parser_test" description="cleanup module">
    <delete dir="${parser_test.output.dir}"/>
    <delete dir="${parser_test.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.parser, clean.module.parser_main, clean.module.parser_test" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.parser, compile.module.parser_main, compile.module.parser_test" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>